from pycoingecko import CoinGeckoAPI
import telebot
import config
import coin_dict
import gas_price

bot = telebot.TeleBot(config.BOT_TOKEN)
cg = CoinGeckoAPI()


@bot.message_handler(commands=['start', 'help'])
def start(message):
    mess = f'–ü—Ä–∏–≤—ñ—Ç, <b>{message.from_user.first_name}</b>\n' \
           f'\n' \
           f'–Ø - <b>CryptoInfoBot</b>, –æ—Å—å –∫–æ–º–∞–Ω–¥–∏ –¥–ª—è –≤–∑–∞—î–º–æ–¥—ñ—ó –∑—ñ –º–Ω–æ—é: \n' \
           f'\n' \
           f'/start a–±–æ /help - –û—Ç—Ä–∏–º–∞—Ç–∏ —Ü–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è \n' \
           f'/price - –û—Ç—Ä–∏–º–∞—Ç–∏ —Ü—ñ–Ω—É –≤–∏–±—Ä–∞–Ω–æ—ó –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∏ \n' \
           f'/gas - –û—Ç—Ä–∏–º–∞—Ç–∏ –∞–∫—Ç—É–∞–ª—å–Ω—É —Ü—ñ–Ω—É –Ω–∞ –≥–∞–∑ –≤ –º–µ—Ä–µ–∂—ñ ETH \n' \
           f'/alert - –ü–æ—Å—Ç–∞–≤–∏—Ç–∏ –æ–ø–æ–≤—ñ—â–µ–Ω–Ω—è –ø—Ä–æ –∑–º—ñ–Ω—É —Ü—ñ–Ω–∏ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∏ \n'\
           f'/click - –ù–µ –Ω–∞—Ç–∏—Å–∫–∞—Ç–∏!!! \n' \
           f'\n' \
           f'\n' \
           f'–ê–¥–º—ñ–Ω - @vakal33 \n' \
           f'\n' \
           f'–ü—ñ–¥—Ç—Ä–∏–º–∞—Ç–∏ –¥–æ–Ω–∞—Ç–æ–º: \n' \
           f'\n' \
           f'ETH | BSC - <code>0xE9239d18E4211f97113AD3aCB8979979Cf0549Ef</code> \n' \
           f'\n' \
           f'TRC20 - <code>TQHZqsDZVyj4KRpZf7789ckBNuN6vABeAu</code>'     
              
           
    bot.send_message(message.chat.id, mess, parse_mode='html')

@bot.message_handler(commands=['price'])
def price_comand(message):
    mess = bot.send_message(message.chat.id, f'<b>–í–≤–µ–¥—ñ—Ç—å –Ω–∞–∑–≤—É, –Ω–∞–ø—Ä–∏–∫–ª–∞–¥ "BTC":</b> ', parse_mode='html')
    bot.register_next_step_handler(mess, price_comand)



def price_comand(message):
    crypto_id = message.text.lower()
    key = crypto_id
    if key in coin_dict.coin_list:
        crypto_name = coin_dict.coin_list.get(key)
        price_response = cg.get_price(ids=crypto_name, vs_currencies='usd', include_24hr_change='true')
        main_currency = 'usd'


        price = price_response[crypto_name][main_currency]
        usd_24h_change = price_response[crypto_name]['usd_24h_change']
        usd_24h_change = round(usd_24h_change, 2)
        mess = f'üí∞ <b>{crypto_id.upper()}</b> üî•\n' \
               f'---------------------------------- \n' \
               f'üìç <b>–¶—ñ–Ω–∞</b> ~ {price} üí≤\n' \
               f'---------------------------------- \n' \
               f'üìå <b>24 H:</b> {usd_24h_change} % üìä'  
        bot.send_message(message.chat.id, mess, parse_mode='html')
        
    else:    
        bot.send_message(message.chat.id, f'Gavno xyle, try again xyle... üí© ', parse_mode='html')


@bot.message_handler(commands=['gas'])
def gas(message):
    gas_price.gas_func()
    link = 'https://etherscan.io/gastracker'
    mess = f'<b>–ê–∫—Ç—É–∞–ª—å–Ω–∞ —Ü—ñ–Ω–∞ –≥–∞–∑—É ‚õΩ:</b> \n' \
          f'\n' \
          f'üî• Low ~ {gas_price.low} GWEI\n' \
          f'--------------------------------------\n' \
          f'üí• Avarege ~ {gas_price.avarege} GWEI\n' \
          f'---------------------------------------\n' \
          f'üß® Hight ~ {gas_price.hight} GWEI\n' \
          f'\n' \
          f'<b>–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –∑:</b> {link}'  
                    
    bot.send_message(message.chat.id, mess, parse_mode='html')


@bot.message_handler(commands=['click'])
def enjoy(message):
    with open('source\gifka_rus.MP4', 'rb') as gif:
        bot.send_video(message.chat.id, gif)



@bot.message_handler(commands=['alert'])
def alert(message):
    bot.send_message(message.chat.id, '–ö–æ–º–∞–Ω–¥–∞ –≤ —Ä–æ–∑—Ä–æ–±—Ü—ñ <3')

bot.polling(none_stop=True)